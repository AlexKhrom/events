{"remainingRequest":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/go/src/events/static/src/components/Login.vue?vue&type=style&index=0&id=a8fcd822&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/go/src/events/static/src/components/Login.vue","mtime":1659015933679},{"path":"/Users/mac/go/src/events/static/node_modules/css-loader/dist/cjs.js","mtime":1656160197442},{"path":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656160198444},{"path":"/Users/mac/go/src/events/static/node_modules/postcss-loader/src/index.js","mtime":1656160197665},{"path":"/Users/mac/go/src/events/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/index.js","mtime":1656160198005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi10ZXh0LWZpZWxkIGlucHV0IHsKICBmb250LXNpemU6IDMwcHg7Cn0KCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-form\n            class=\"form\"\n            :style=\"'margin-top:'+marginTop()\"\n            ref=\"form\"\n            v-model=\"valid\"\n            lazy-validation\n    >\n\n      <v-text-field\n          size=\"30px\"\n          v-model=\"$store.state.user.email\"\n          :rules=\"emailRules\"\n          label=\"email\"\n          required\n          solo\n      ></v-text-field>\n\n      <v-text-field\n          v-model=\"$store.state.user.password\"\n          :rules=\"passwordRules\"\n          label=\"Password\"\n          :append-icon=\"show ? 'mdi-eye' : 'mdi-eye-off'\"\n          :type=\"show ? 'text' : 'password'\"\n          @click:append=\"show = !show\"\n          required\n          solo\n      ></v-text-field>\n\n\n      <v-btn\n          style=\"height: 40px;width: 100px\"\n          :disabled=\"!valid\"\n          color=\"primary\"\n          class=\"my-2\"\n          @click=\"validate\"\n      >\n        Login\n      </v-btn>\n\n      <v-btn\n          style=\"height: 40px;margin-left: 10px\"\n          class=\"my-2\"\n          @click=\"$router.push('/signUp');email='';login='';password=''\"\n      >\n        Sign up\n      </v-btn>\n\n    </v-form>\n\n\n    <v-form v-if=\"page==='signUpIsOk'\">\n      <div class=\"text-h2\" style=\"color: limegreen\">sign up is successful</div>\n    </v-form>\n    <!--    <v-btn-->\n    <!--        style=\"height: 40px;\"-->\n    <!--        color=\"primary\"-->\n    <!--        @click=\"signUp\"-->\n    <!--    >   send email-->\n    <!--    </v-btn>-->\n  </div>\n</template>\n\n<script>\n\nexport default {\n  // components: {SignUp},\n  data: () => ({\n    page: 'login',\n    valid: true,\n    show: false,\n    login: '',\n    email: '',\n    code: '',\n    loginRules: [\n      v => !!v || 'Login is required',\n      v => (v && v.length <= 6) || 'Login must be less than 4 characters',\n    ],\n    password: '',\n    passwordRules: [\n      v => !!v || 'Password is required',\n      v => (v && v.length <= 10) || 'Password must be less than 10 characters',\n    ],\n    codeRules: [\n      v => !!v || 'code is required',\n      v => (v && v.length === 4) || 'code must be 4 characters',\n    ],\n    emailRules: [\n      v => !!v || 'E-mail is required',\n      v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n    ],\n\n  }),\n\n  methods: {\n    validate() {\n      this.$refs.form.validate()\n      this.loginReq({email: this.$store.state.user.email, password: this.$store.state.user.password})\n    },\n    reset() {\n      this.$refs.form.reset()\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation()\n    },\n    marginTop() {\n      const devices = new RegExp('Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini', \"i\");\n      if (devices.test(navigator.userAgent)) {\n        return '200px'\n      } else {\n        return '40px'\n      }\n    },\n    async loginReq(user) {\n      console.log('make request :', user)\n      let response = await fetch('/api/login', {\n        method: 'POST',\n        body: JSON.stringify(user)\n      });\n\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        console.log(\"response = \", response)\n        this.page = 'signUpIsOk'\n        setTimeout(this.changePage, 1500)\n        console.log(\"okkkk\")\n      } else {\n        console.log(\"not ok\")\n      }\n    },\n    changePage(){\n      window.location.replace(\"/\")\n    },\n\n\n    getCookie(name) {\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${name}=`);\n      if (parts.length === 2) return parts.pop().split(';').shift();\n    }\n  },\n}\n</script>\n\n<style scoped>\n.v-text-field input {\n  font-size: 30px;\n}\n\n</style>"]}]}
{"remainingRequest":"/Users/mac/go/src/events/static/node_modules/thread-loader/dist/cjs.js!/Users/mac/go/src/events/static/node_modules/babel-loader/lib/index.js!/Users/mac/go/src/events/static/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/mac/go/src/events/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/go/src/events/static/src/components/ListEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/go/src/events/static/src/components/ListEvents.vue","mtime":1660549153879},{"path":"/Users/mac/go/src/events/static/babel.config.js","mtime":1653650336335},{"path":"/Users/mac/go/src/events/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/thread-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/babel-loader/lib/index.js","mtime":1656160197672},{"path":"/Users/mac/go/src/events/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/index.js","mtime":1656160198005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","filters","moment","date","data","isChangeEvent","isChangeEventWithDuration","startEventTime","endEventTime","eventToChangeId","timePicker","percentOfEventTime","datePicker","computed","eventsArray","a","methods","deleteEvent","id","event","clearInterval","localStorage","camebackEvent","changeEvent","console","saveEventWithDurationChanges","saveEventChanges","calcTimePercent","index","timeForDay","getEvents","fetch","method","response","events","changeEventFromBD","body","deleteEventFromBD","borderColorForEvent","sortEvents","isNewDay","printEventDuration","minutes","getHourAndMinutes","getEndOfEventStr","makeHoursAndMinutesStr","hours","makeDate","time","seconds","milliseconds","findIndexEvents","beforeMount"],"sourceRoot":"src/components","sources":["ListEvents.vue"],"sourcesContent":["<!--evets = []event{-->\n<!--  dt: date of creat event-->\n<!--  title: name of event-->\n<!--  timeStart: date of start doing smth-->\n<!--  timeEnd: date of finish doing smth-->\n<!--}-->\n<template>\n  <div>\n    <template v-if=\"isChangeEvent\">\n      <div class=\"picker\" @click=\"isChangeEvent=false\">\n        <div class=\"picker__content\" @click.stop>\n          <slot>\n            <v-row justify=\"space-around\">\n              <v-col>\n                <v-time-picker\n                    format=\"24hr\"\n                    v-model=\"timePicker\"\n                ></v-time-picker>\n              </v-col>\n              <v-col>\n                <v-date-picker\n                    v-model=\"datePicker\"\n                    color=\"primary lighten-1\"\n                ></v-date-picker>\n              </v-col>\n              <v-col>\n                <v-btn class=\"mb-4\" width=\"290px\"\n                       @click=\"saveEventChanges\"\n                       color=\"white\">save\n                </v-btn>\n              </v-col>\n            </v-row>\n          </slot>\n        </div>\n      </div>\n    </template>\n\n    <template v-if=\"isChangeEventWithDuration\">\n      <div class=\"picker\" @click=\"isChangeEventWithDuration=false\">\n        <div class=\"picker__content\" @click.stop>\n          <slot>\n            <div>\n              <h1>Change your event:</h1>\n              <v-row\n                  justify=\"space-around\"\n                  align=\"center\"\n              >\n                <v-col style=\"width: 350px; flex: 0 1 auto;\">\n                  <h2>Start:</h2>\n                  <v-time-picker\n                      format=\"24hr\"\n                      v-model=\"startEventTime\"\n                      :max=\"endEventTime\"\n                  ></v-time-picker>\n                </v-col>\n                <v-col style=\"width: 350px; flex: 0 1 auto;\">\n                  <h2>End:</h2>\n                  <v-time-picker\n                      format=\"24hr\"\n                      v-model=\"endEventTime\"\n                      :min=\"startEventTime\"\n                  ></v-time-picker>\n                </v-col>\n                <v-col>\n                  <v-date-picker\n                      v-model=\"datePicker\"\n                      color=\"primary lighten-1\"\n                  ></v-date-picker>\n                </v-col>\n                <v-col>\n                  <v-btn class=\"mb-2\" width=\"290px\"\n                         @click=\"saveEventWithDurationChanges\"\n                         height=\"50px\"\n                         color=\"white\">save\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </div>\n          </slot>\n        </div>\n      </div>\n    </template>\n\n\n    <div v-for=\"(event,index) in this.$store.state.events\"\n         :key=\"event.id\"\n    >\n      <div v-if=\"isNewDay(index)\" style=\"margin-top: 20px;color: #555555\">{{ new Date(event.dt) | moment }}</div>\n      <div\n          style=\"display: flex;justify-content: space-between;margin-top: 20px;padding:5px;\">\n        <div>\n          <div :style=\"event.deleted?'opacity: 0.5':''\"\n               style=\"font-size: 18px;text-transform: capitalize;display: flex;align-items: center;\">{{ event.title }}\n          </div>\n          <span v-if=\"!event.deleted\" style=\"color: #555;font-size: 11px;display: block\">{{\n              getHourAndMinutes(event)\n            }}</span>\n        </div>\n        <div>\n          <span v-if=\"event.deleted\" style=\"color: #555;font-size: 12px;padding-right: 10px\">{{\n              event.waitSeconds\n            }}с</span>\n          <span v-if=\"event.timeStart!==0&&event.timeStart!==undefined&&!event.deleted\" style=\"color: #555;font-size: 14px;\">\n            {{ printEventDuration(event) }}\n          </span>\n          <v-btn v-if=\"!event.deleted\" @click=\"changeEvent(event.id)\" icon>✏️</v-btn>\n          <v-btn v-if=\"event.deleted\" @click=\"camebackEvent(event.id)\" text small>вернуть ↩︎</v-btn>\n          <v-btn v-else @click=\"deleteEvent(event.id)\" icon>🗑</v-btn>\n        </div>\n      </div>\n      <div :style=\"{border: '2px solid '+borderColorForEvent(index),width: calcTimePercent(index) +'%'}\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\n\n\nexport default {\n  name: \"listEvents\",\n  filters: {\n    moment(date) {\n      return moment(date).format(\"D MMMM\");\n    },\n  },\n  data() {\n    return {\n      isChangeEvent: false,\n      isChangeEventWithDuration: false,\n      startEventTime: null,\n      endEventTime: null,\n      eventToChangeId: -1,\n      timePicker: \"\",\n      percentOfEventTime: 0,\n      datePicker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n\n    }\n  },\n  computed: {\n    eventsArray() {\n      // console.log(this.$store.state.events.slice().sort((a, b) =>\n      //     a.dt < b.dt ? 1 : -1))\n      return this.$store.state.events.slice().sort((a, b) =>\n          a.dt < b.dt ? 1 : -1)\n    }\n  },\n  methods: {\n    deleteEvent(id) {\n      let index = this.findIndexEvents(id)\n      let event = this.$store.state.events[index]\n\n      // console.log(\"index = \", index)\n      // console.log({event})\n\n      let waitSeconds = 3\n      event.waitSeconds = waitSeconds\n      let intervalId = setInterval(() => {\n        if (!event.deleted) {\n          clearInterval(intervalId)\n          localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n          this.$forceUpdate()\n          return\n        }\n        if (--waitSeconds < 0) {\n          clearInterval(intervalId);\n          let index = this.findIndexEvents(id)\n          this.deleteEventFromBD(id)\n          this.$store.state.events.splice(index, 1)\n        } else {\n          event.waitSeconds = waitSeconds\n        }\n        this.$forceUpdate()\n      }, 1000);\n\n      // this.$store.state.events.splice(index, 1)\n\n      event.deleted = Date.now();\n      this.$forceUpdate();\n      localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n    },\n    camebackEvent(id) {\n      let index = this.findIndexEvents(id)\n      this.$store.state.events[index].deleted = 0\n      this.$forceUpdate();\n    },\n    changeEvent(id) {\n      let index = this.findIndexEvents(id)\n      let date = new Date(this.$store.state.events[index].dt)\n      this.selectedEventIndex = index\n      if (this.$store.state.events[index].timeEnd !== 0) {\n        let wasDateStart = new Date(this.$store.state.events[index].timeStart)\n        let wasDateEnd = new Date(this.$store.state.events[index].timeEnd)\n\n        this.startEventTime = this.makeHoursAndMinutesStr(wasDateStart)\n        this.endEventTime = this.makeHoursAndMinutesStr(wasDateEnd)\n        this.datePicker = (new Date(date - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\n\n        console.log(this.startEventTime)\n        console.log(this.endEventTime)\n        this.isChangeEventWithDuration = true\n\n      } else {\n\n        this.timePicker = this.makeHoursAndMinutesStr(date)\n        this.datePicker = (new Date(date - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)\n        this.isChangeEvent = true\n        this.$forceUpdate();\n      }\n    },\n    saveEventWithDurationChanges() {\n      let startDate = this.makeDate(this.datePicker, this.startEventTime)\n      // let startDate = new Date(this.datePicker + \"T\" + this.startEventTime)\n      let endDate = this.makeDate(this.datePicker, this.endEventTime)\n      // let endDate = new Date(this.datePicker + \"T\" + this.endEventTime)\n\n      this.$store.state.events[this.selectedEventIndex].timeStart = startDate.getTime() + this.$store.state.events[this.selectedEventIndex].dt % 1000\n      this.$store.state.events[this.selectedEventIndex].timeEnd = endDate.getTime() + this.$store.state.events[this.selectedEventIndex].dt % 1000\n      this.$store.state.events[this.selectedEventIndex].dt = this.$store.state.events[this.selectedEventIndex].timeStart\n\n      this.changeEventFromBD(this.$store.state.events[this.selectedEventIndex])\n      localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n      this.isChangeEventWithDuration = false\n      this.sortEvents()\n    },\n    saveEventChanges() {\n      let date = this.makeDate(this.datePicker, this.timePicker)\n      // let date = new Date(this.datePicker + \"T\" + this.timePicker)\n\n      this.$store.state.events[this.selectedEventIndex].dt = date.getTime() + this.$store.state.events[this.selectedEventIndex].dt % 1000\n\n      this.changeEventFromBD(this.$store.state.events[this.selectedEventIndex])\n      localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n      this.isChangeEvent = false\n      this.sortEvents()\n    },\n    calcTimePercent(index) {\n      if (this.$store.state.events[index].timeEnd === 0) {\n        return 100\n      }\n      if ((this.$store.state.events[index].timeEnd - this.$store.state.events[index].timeStart) <= 0)\n        return 0\n\n      let timeForDay = 0\n      for (let i = 0; i < this.eventsArray.length; i++) {\n        if ((new Date(this.$store.state.events[i].dt)).getDate() === (new Date(this.$store.state.events[index].dt)).getDate()\n            && this.$store.state.events[i].timeStart !== 0) {\n          timeForDay += this.$store.state.events[i].timeEnd - this.$store.state.events[i].timeStart\n        }\n      }\n      return this.percentOfEventTime = (this.$store.state.events[index].timeEnd - this.$store.state.events[index].timeStart) / timeForDay * 100\n    },\n\n    async getEvents() {\n      let response = await fetch('/api/getEvents', {\n        method: 'GET',\n      });\n\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        let events = await response.json()\n        this.$store.state.events = events\n        console.log(this.$store.state.events)\n        this.sortEvents()\n        localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n\n        console.log(\"okkkk\")\n      } else if (response.status > 299 && response.status < 500) {\n        console.log(\"err\")\n      } else if (response.status > 500) {\n        console.log(\"some wrong on backend\")\n      }\n    },\n\n    async changeEventFromBD(event) {\n      let response = await fetch('/api/changeEvent', {\n        method: 'PUT',\n        body: JSON.stringify(event),\n      });\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        console.log(this.$store.state.events)\n        this.sortEvents()\n        localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n\n        console.log(\"okkkk\")\n      } else if (response.status > 299 && response.status < 500) {\n        console.log(\"err\")\n\n      } else if (response.status > 500) {\n        console.log(\"some wrong on backend\")\n      }\n    },\n    async deleteEventFromBD(id) {\n      let response = await fetch('/api/deleteEvent', {\n        method: 'DELETE',\n        body: JSON.stringify({id: id}),\n      });\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        console.log(this.$store.state.events)\n        this.sortEvents()\n        localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n\n        console.log(\"okkkk\")\n      } else if (response.status > 299 && response.status < 500) {\n        console.log(\"err\")\n\n      } else if (response.status > 500) {\n        console.log(\"some wrong on backend\")\n      }\n    },\n\n\n    borderColorForEvent(index) {\n      // console.log(this.$store.state.events[index].timeStart === undefined ? \"blue\" : \"green\")\n      return this.$store.state.events[index].timeStart === 0 ? \"none\" : \"green\"//rgb(47,101,186)-blue\n    },\n    sortEvents() {\n      this.$store.state.events = this.$store.state.events.slice().sort((a, b) =>\n          a.dt < b.dt ? 1 : -1)\n    },\n\n    isNewDay(index) {\n      if (index === 0) {\n        return true\n      }\n      console.log(index, (new Date(this.eventsArray[index - 1].dt)).getDate(), (new Date(this.eventsArray[index].dt)).getDate())\n      return (new Date(this.eventsArray[index - 1].dt)).getDate() !== (new Date(this.eventsArray[index].dt)).getDate();\n    },\n\n    printEventDuration(event) {\n      let hours = Math.floor((event.timeEnd - event.timeStart) / (3600000))\n      let minutes = Math.floor((event.timeEnd - event.timeStart) % (3600000) / 60000)\n      minutes = minutes.toString().length === 1 ? '0' + minutes : minutes\n      return hours + \":\" + minutes\n    },\n\n    getHourAndMinutes(event) {\n      // let hour = moment(event.dt).hour()\n      // let minutes = moment(event.dt).minutes().toString().length === 1 ? \"0\" + moment(event.dt).minutes() : moment(event.dt).minutes()\n      if (event.timeEnd === 0 || event.timeEnd === undefined) {\n        return this.makeHoursAndMinutesStr(new Date(event.dt))\n      } else {\n        return this.makeHoursAndMinutesStr(new Date(event.dt)) + \" - \" + this.makeHoursAndMinutesStr(new Date(event.timeEnd))\n\n      }\n    },\n    getEndOfEventStr(event) {\n      return this.makeHoursAndMinutesStr(new Date(event.timeEnd))\n    },\n    makeHoursAndMinutesStr(date) {\n      let hours = date.getHours()\n      let minutes = date.getMinutes()\n      hours = hours.toString().length === 1 ? '0' + hours : hours\n      minutes = minutes.toString().length === 1 ? '0' + minutes : minutes\n      return hours + ':' + minutes\n    },\n    makeDate(date, time, seconds, milliseconds) {\n      date = date === undefined ? \"\" : date\n      time = time === undefined ? \"\" : \"T\" + time\n      if (seconds !== undefined) {\n        seconds = seconds.length === 1 ? '0' + seconds : seconds\n      }\n      seconds = seconds === undefined ? \"\" : \":\" + seconds\n      milliseconds = milliseconds === undefined ? \"\" : \".\" + milliseconds\n      console.log(\"make Date = \", date + time + seconds + milliseconds)\n\n      return new Date(date + time + seconds + milliseconds)\n    },\n    findIndexEvents(id) {\n      for (let i = 0; i < this.$store.state.events.length; i++) {\n        if (this.$store.state.events[i].id === id) {\n          return i\n        }\n      }\n      return -1\n    },\n\n  },\n  beforeMount() {\n    this.getEvents()\n  },\n}\n</script>\n\n<style scoped>\n\n.picker {\n  color: white;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  z-index: 100;\n  overflow: auto;\n  display: flex;\n  padding-top: 80px;\n}\n\n.picker__content {\n  /*overflow-y: scroll;*/\n  display: block;\n  width: 290px;\n  margin: auto;\n\n  min-height: 100%;\n  justify-content: space-between;\n  z-index: 200;\n}\n</style>"]}]}
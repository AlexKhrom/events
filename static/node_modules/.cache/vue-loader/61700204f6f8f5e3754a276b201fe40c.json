{"remainingRequest":"/Users/mac/Desktop/events/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/events/static/src/components/AddEvent.vue?vue&type=style&index=0&id=03dd27ec&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/Desktop/events/static/src/components/AddEvent.vue","mtime":1657027088076},{"path":"/Users/mac/Desktop/events/static/node_modules/css-loader/dist/cjs.js","mtime":1656160197442},{"path":"/Users/mac/Desktop/events/static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656160198444},{"path":"/Users/mac/Desktop/events/static/node_modules/postcss-loader/src/index.js","mtime":1656160197665},{"path":"/Users/mac/Desktop/events/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/Desktop/events/static/node_modules/vue-loader/lib/index.js","mtime":1656160198005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGl0bGVzIHsKICBtYXJnaW46IC0zZW0gMCAwIC0yZW07CgogIC8qINCS0YvRgNCw0LLQvdC40LLQsNC90LjQtSDQv9C+INGG0LXQvdGC0YDRgyAqLwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLnRpdGxlIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgogIHZlcnRpY2FsLWFsaWduOiB0b3A7CgogIC8qINCj0LHQuNGA0LDQtdC8INCy0YvRgNCw0LLQvdC40LLQsNC90LjQtSDQv9C+INGG0LXQvdGC0YDRgyAqLwogIHRleHQtYWxpZ246IGxlZnQ7CgogIG1hcmdpbjogM2VtIDAgMCAyZW07Cn0KCi5waWNrZXIgewogIGNvbG9yOiB3aGl0ZTsKICB0b3A6IDA7CiAgYm90dG9tOiAwOwogIHJpZ2h0OiAwOwogIGxlZnQ6IDA7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOwogIHBvc2l0aW9uOiBmaXhlZDsKICB6LWluZGV4OiAxMDA7CiAgb3ZlcmZsb3c6IGF1dG87CiAgZGlzcGxheTogZmxleDsKICBwYWRkaW5nLXRvcDogODBweDsKfQoKLnBpY2tlcl9fY29udGVudCB7CiAgLypvdmVyZmxvdy15OiBzY3JvbGw7Ki8KICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogMjkwcHg7CiAgbWFyZ2luOiBhdXRvOwoKICBtaW4taGVpZ2h0OiAxMDAlOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICB6LWluZGV4OiAyMDA7Cn0K"},{"version":3,"sources":["AddEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AddEvent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"height: 100%;\">\n    <div style=\"display:inline-block;margin: auto\">\n      <v-container fill-height>\n        <v-layout row wrap align-center>\n          <v-flex v-for=\"(title,index) in $store.state.titles\" :key=\"title.title\" style=\"margin: 15px\">\n            <v-btn @click=\"addEvent(title)\" @mousedown=\"deleteTitleDown\" @mouseup=\"deleteTitleUp(title,index)\"\n                   style=\"display:block;margin: auto;width: 200px;height: 100px;\">\n              {{ title.title }}\n            </v-btn>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </div>\n    <div style=\"margin-top:20px;display: flex;justify-content: center;text-align: center\">\n      <v-text-field\n          style=\"margin:20px 20px 20px 0\"\n          label=\"🥴 новое событие\"\n          solo\n          v-model=\"newEvent\"\n          @cancel=\"createEvent\"\n      ></v-text-field>\n\n      <v-checkbox\n          style=\"padding-top: 15px;\"\n\n          v-model=\"isEventWithDuration\"\n          label=\"with duration\"\n      ></v-checkbox>\n      <!--              <v-btn-->\n      <!--                  height=\"48px\"-->\n      <!--                  depressed-->\n      <!--                  color=\"primary\"-->\n      <!--                  @click=\"isPickEventDuration=true\"-->\n      <!--              >-->\n      <!--                duration-->\n      <!--              </v-btn>-->\n    </div>\n    <v-btn @click=\"createEvent\" color=\"primary\" style=\"margin-top: -30px;width: 100%;\">add</v-btn>\n\n    <template v-if=\"isPickEventDuration\">\n      <div class=\"picker\" @click=\"isPickEventDuration=false\">\n        <div class=\"picker__content\" @click.stop>\n          <slot>\n            <div>\n              <h1>Plan your event:</h1>\n              <v-row\n                  justify=\"space-around\"\n                  align=\"center\"\n              >\n                <v-col style=\"width: 350px; flex: 0 1 auto;\">\n                  <h2>Start:</h2>\n                  <v-time-picker\n                      format=\"24hr\"\n                      v-model=\"startEventTime\"\n                      :max=\"endEventTime\"\n                  ></v-time-picker>\n                </v-col>\n                <v-col style=\"width: 350px; flex: 0 1 auto;\">\n                  <h2>End:</h2>\n                  <v-time-picker\n                      format=\"24hr\"\n                      v-model=\"endEventTime\"\n                      :min=\"startEventTime\"\n                  ></v-time-picker>\n                  <v-btn class=\"mb-2\" width=\"290px\"\n                         @click=\"addEventWithDuration\"\n                         style=\"margin-top: 30px\"\n                         height=\"50px\"\n                         color=\"primary\">save\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </div>\n          </slot>\n        </div>\n      </div>\n    </template>\n\n\n    <template>\n      <v-row justify=\"center\">\n        <v-dialog\n            v-model=\"dialog\"\n            persistent\n            max-width=\"290\"\n        >\n          <v-card>\n            <v-card-title class=\"text-h5\">\n              Delete {{titleToDelete.title}} ?\n            </v-card-title>\n<!--            <v-card-text>Let Google help apps determine location. This means sending anonymous location data to Google,-->\n<!--              even when no apps are running.-->\n<!--            </v-card-text>-->\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                  color=\"darken-1\"\n                  text\n                  @click=\"dialog = false;\"\n              >\n               No\n              </v-btn>\n              <v-btn\n                  color=\"green darken-1\"\n                  text\n                  @click=\"dialog = false;deleteTitleWithIndex(titleIndex)\"\n              >\n                Yes\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-row>\n    </template>\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: \"addEvent\",\n  data() {\n    return {\n      timePicker: \"\",\n      selectedEventIndex: -1,\n      newEventToAdd: {},\n      newEvent: \"\",\n      timerDeleteTitle: false,\n      timerId: 0,\n      dialog: false,\n      titleToDelete: {},\n      titleIndex:0,\n\n      startEventTime: null,\n      endEventTime: null,\n      isPickEventDuration: false,\n      isEventWithDuration: false,\n      datePicker: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n\n    }\n  },\n  methods: {\n    sortEvents() {\n      this.$store.state.events.sort((a, b) =>\n          a.dt < b.dt ? 1 : -1)\n    },\n    addEvent(newTitle) {\n      if (newTitle.withDuration) {\n        this.isPickEventDuration = true\n        this.startEventTime = (new Date()).getHours() + \":\" + (new Date()).getMinutes()\n        this.endEventTime = (new Date()).getHours() + \":\" + (new Date()).getMinutes()\n        this.newEventToAdd = {\n          title: newTitle.title,\n          dt: Date.now(),\n        }\n      } else {\n        this.$store.state.events.push({\n          title: newTitle.title,\n          dt: Date.now(),\n        })\n\n        this.sortEvents()\n        localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n        this.page = 'list';\n      }\n    },\n    addEventWithDuration() {\n      let date = new Date\n      date.setHours(0, 0, 0, 0)\n      let nowMonth = date.getMonth().toString().length < 2 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)\n      // console.log(new Date(date.getFullYear() + \"-\" + nowMonth + \"-\" + date.getDate() + \" \" + this.startEventTime))\n      this.$store.state.events.push({\n        title: this.newEventToAdd.title,\n        dt: (new Date(date.getFullYear() + \"-\" + nowMonth + \"-\" + date.getDate() + \" \" + this.startEventTime).getTime()),\n        timeStart: (new Date(date.getFullYear() + \"-\" + nowMonth + \"-\" + date.getDate() + \" \" + this.startEventTime).getTime()),\n        timeEnd: (new Date(date.getFullYear() + \"-\" + nowMonth + \"-\" + date.getDate() + \" \" + this.endEventTime)).getTime(),\n      })\n\n      this.startEventTime = null\n      this.endEventTime = null\n\n      this.sortEvents()\n      localStorage.setItem('events', JSON.stringify(this.$store.state.events))\n      this.isPickEventDuration = false\n      this.page = 'list';\n    },\n    findIndexEvents(id) {\n      for (let i = 0; i < this.$store.state.events.length; i++) {\n        if (this.$store.state.events[i].dt === id) {\n          return i\n        }\n      }\n      return -1\n    },\n    deleteTitleDown() {\n      this.timerId = setTimeout(this.handlerFunc, 500)\n    },\n    handlerFunc() {\n      this.timerDeleteTitle = true\n      console.log('hi')\n    },\n    deleteTitleUp(title, id) {\n      if (this.timerDeleteTitle) {\n        console.log(title, id)\n        this.titleIndex = id\n        this.titleToDelete = title\n        this.dialog = true\n        this.isPickEventDuration = false\n      }\n      this.timerDeleteTitle = false\n      clearTimeout(this.timerId)\n    },\n    deleteTitleWithIndex(index){\n      this.$store.state.titles.splice(index, 1)\n      this.$forceUpdate();\n      localStorage.setItem('titles', JSON.stringify(this.$store.state.titles))\n      console.log('delete');\n    },\n    createEvent() {\n      if (this.newEvent !== \"\") {\n        // alert(\"newEvent\")\n        let newTitle = {\n          title: this.newEvent,\n          withDuration: this.isEventWithDuration\n        }\n        this.$store.state.titles.push(newTitle)\n        console.log(this.$store.state.titles)\n        this.newEvent = \"\"\n        this.isEventWithDuration = false\n        localStorage.setItem('titles', JSON.stringify(this.$store.state.titles))\n        this.$forceUpdate();\n      }\n    },\n  }\n}\n</script>\n\n<style scoped>\n.titles {\n  margin: -3em 0 0 -2em;\n\n  /* Выравнивание по центру */\n  text-align: center;\n}\n\n.title {\n  display: inline-block;\n\n  vertical-align: top;\n\n  /* Убираем выравнивание по центру */\n  text-align: left;\n\n  margin: 3em 0 0 2em;\n}\n\n.picker {\n  color: white;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  z-index: 100;\n  overflow: auto;\n  display: flex;\n  padding-top: 80px;\n}\n\n.picker__content {\n  /*overflow-y: scroll;*/\n  display: block;\n  width: 290px;\n  margin: auto;\n\n  min-height: 100%;\n  justify-content: space-between;\n  z-index: 200;\n}\n</style>"]}]}
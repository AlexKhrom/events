{"remainingRequest":"/Users/mac/go/src/events/static/node_modules/thread-loader/dist/cjs.js!/Users/mac/go/src/events/static/node_modules/babel-loader/lib/index.js!/Users/mac/go/src/events/static/node_modules/vuetify/lib/components/VGrid/VCol.js","dependencies":[{"path":"/Users/mac/go/src/events/static/node_modules/vuetify/lib/components/VGrid/VCol.js","mtime":1656160201771},{"path":"/Users/mac/go/src/events/static/babel.config.js","mtime":1653650336335},{"path":"/Users/mac/go/src/events/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/thread-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/babel-loader/lib/index.js","mtime":1656160197672}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbWFjL2dvL3NyYy9ldmVudHMvc3RhdGljL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9tYWMvZ28vc3JjL2V2ZW50cy9zdGF0aWMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVkdyaWQvVkdyaWQuc2FzcyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IG1lcmdlRGF0YSBmcm9tICcuLi8uLi91dGlsL21lcmdlRGF0YSc7CmltcG9ydCB7IHVwcGVyRmlyc3QgfSBmcm9tICcuLi8uLi91dGlsL2hlbHBlcnMnOyAvLyBubyB4cwoKdmFyIGJyZWFrcG9pbnRzID0gWydzbScsICdtZCcsICdsZycsICd4bCddOwoKdmFyIGJyZWFrcG9pbnRQcm9wcyA9IGZ1bmN0aW9uICgpIHsKICByZXR1cm4gYnJlYWtwb2ludHMucmVkdWNlKGZ1bmN0aW9uIChwcm9wcywgdmFsKSB7CiAgICBwcm9wc1t2YWxdID0gewogICAgICB0eXBlOiBbQm9vbGVhbiwgU3RyaW5nLCBOdW1iZXJdLAogICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICB9OwogICAgcmV0dXJuIHByb3BzOwogIH0sIHt9KTsKfSgpOwoKdmFyIG9mZnNldFByb3BzID0gZnVuY3Rpb24gKCkgewogIHJldHVybiBicmVha3BvaW50cy5yZWR1Y2UoZnVuY3Rpb24gKHByb3BzLCB2YWwpIHsKICAgIHByb3BzWydvZmZzZXQnICsgdXBwZXJGaXJzdCh2YWwpXSA9IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgImRlZmF1bHQiOiBudWxsCiAgICB9OwogICAgcmV0dXJuIHByb3BzOwogIH0sIHt9KTsKfSgpOwoKdmFyIG9yZGVyUHJvcHMgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIGJyZWFrcG9pbnRzLnJlZHVjZShmdW5jdGlvbiAocHJvcHMsIHZhbCkgewogICAgcHJvcHNbJ29yZGVyJyArIHVwcGVyRmlyc3QodmFsKV0gPSB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgICJkZWZhdWx0IjogbnVsbAogICAgfTsKICAgIHJldHVybiBwcm9wczsKICB9LCB7fSk7Cn0oKTsKCnZhciBwcm9wTWFwID0gewogIGNvbDogT2JqZWN0LmtleXMoYnJlYWtwb2ludFByb3BzKSwKICBvZmZzZXQ6IE9iamVjdC5rZXlzKG9mZnNldFByb3BzKSwKICBvcmRlcjogT2JqZWN0LmtleXMob3JkZXJQcm9wcykKfTsKCmZ1bmN0aW9uIGJyZWFrcG9pbnRDbGFzcyh0eXBlLCBwcm9wLCB2YWwpIHsKICB2YXIgY2xhc3NOYW1lID0gdHlwZTsKCiAgaWYgKHZhbCA9PSBudWxsIHx8IHZhbCA9PT0gZmFsc2UpIHsKICAgIHJldHVybiB1bmRlZmluZWQ7CiAgfQoKICBpZiAocHJvcCkgewogICAgdmFyIGJyZWFrcG9pbnQgPSBwcm9wLnJlcGxhY2UodHlwZSwgJycpOwogICAgY2xhc3NOYW1lICs9ICItIi5jb25jYXQoYnJlYWtwb2ludCk7CiAgfSAvLyBIYW5kbGluZyB0aGUgYm9vbGVhbiBzdHlsZSBwcm9wIHdoZW4gYWNjZXB0aW5nIFtCb29sZWFuLCBTdHJpbmcsIE51bWJlcl0KICAvLyBtZWFucyBWdWUgd2lsbCBub3QgY29udmVydCA8di1jb2wgc20+PC92LWNvbD4gdG8gc206IHRydWUgZm9yIHVzLgogIC8vIFNpbmNlIHRoZSBkZWZhdWx0IGlzIGZhbHNlLCBhbiBlbXB0eSBzdHJpbmcgaW5kaWNhdGVzIHRoZSBwcm9wJ3MgcHJlc2VuY2UuCgoKICBpZiAodHlwZSA9PT0gJ2NvbCcgJiYgKHZhbCA9PT0gJycgfHwgdmFsID09PSB0cnVlKSkgewogICAgLy8gLmNvbC1tZAogICAgcmV0dXJuIGNsYXNzTmFtZS50b0xvd2VyQ2FzZSgpOwogIH0gLy8gLm9yZGVyLW1kLTYKCgogIGNsYXNzTmFtZSArPSAiLSIuY29uY2F0KHZhbCk7CiAgcmV0dXJuIGNsYXNzTmFtZS50b0xvd2VyQ2FzZSgpOwp9Cgp2YXIgY2FjaGUgPSBuZXcgTWFwKCk7CmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICd2LWNvbCcsCiAgZnVuY3Rpb25hbDogdHJ1ZSwKICBwcm9wczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7CiAgICBjb2xzOiB7CiAgICAgIHR5cGU6IFtCb29sZWFuLCBTdHJpbmcsIE51bWJlcl0sCiAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgIH0KICB9LCBicmVha3BvaW50UHJvcHMpLCB7fSwgewogICAgb2Zmc2V0OiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgICJkZWZhdWx0IjogbnVsbAogICAgfQogIH0sIG9mZnNldFByb3BzKSwge30sIHsKICAgIG9yZGVyOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgICJkZWZhdWx0IjogbnVsbAogICAgfQogIH0sIG9yZGVyUHJvcHMpLCB7fSwgewogICAgYWxpZ25TZWxmOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiBudWxsLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcihzdHIpIHsKICAgICAgICByZXR1cm4gWydhdXRvJywgJ3N0YXJ0JywgJ2VuZCcsICdjZW50ZXInLCAnYmFzZWxpbmUnLCAnc3RyZXRjaCddLmluY2x1ZGVzKHN0cik7CiAgICAgIH0KICAgIH0sCiAgICB0YWc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdkaXYnCiAgICB9CiAgfSksCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCwgX3JlZikgewogICAgdmFyIHByb3BzID0gX3JlZi5wcm9wcywKICAgICAgICBkYXRhID0gX3JlZi5kYXRhLAogICAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbiwKICAgICAgICBwYXJlbnQgPSBfcmVmLnBhcmVudDsKICAgIC8vIFN1cGVyLWZhc3QgbWVtb2l6YXRpb24gYmFzZWQgb24gcHJvcHMsIDV4IGZhc3RlciB0aGFuIEpTT04uc3RyaW5naWZ5CiAgICB2YXIgY2FjaGVLZXkgPSAnJzsKCiAgICBmb3IgKHZhciBwcm9wIGluIHByb3BzKSB7CiAgICAgIGNhY2hlS2V5ICs9IFN0cmluZyhwcm9wc1twcm9wXSk7CiAgICB9CgogICAgdmFyIGNsYXNzTGlzdCA9IGNhY2hlLmdldChjYWNoZUtleSk7CgogICAgaWYgKCFjbGFzc0xpc3QpIHsKICAgICAgKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX2NsYXNzTGlzdCRwdXNoOwoKICAgICAgICBjbGFzc0xpc3QgPSBbXTsgLy8gTG9vcCB0aHJvdWdoIGBjb2xgLCBgb2Zmc2V0YCwgYG9yZGVyYCBicmVha3BvaW50IHByb3BzCgogICAgICAgIHZhciB0eXBlOwoKICAgICAgICBmb3IgKHR5cGUgaW4gcHJvcE1hcCkgewogICAgICAgICAgcHJvcE1hcFt0eXBlXS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7CiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHByb3BzW3Byb3BdOwogICAgICAgICAgICB2YXIgY2xhc3NOYW1lID0gYnJlYWtwb2ludENsYXNzKHR5cGUsIHByb3AsIHZhbHVlKTsKICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSkgY2xhc3NMaXN0LnB1c2goY2xhc3NOYW1lKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgdmFyIGhhc0NvbENsYXNzZXMgPSBjbGFzc0xpc3Quc29tZShmdW5jdGlvbiAoY2xhc3NOYW1lKSB7CiAgICAgICAgICByZXR1cm4gY2xhc3NOYW1lLnN0YXJ0c1dpdGgoJ2NvbC0nKTsKICAgICAgICB9KTsKICAgICAgICBjbGFzc0xpc3QucHVzaCgoX2NsYXNzTGlzdCRwdXNoID0gewogICAgICAgICAgLy8gRGVmYXVsdCB0byAuY29sIGlmIG5vIG90aGVyIGNvbC17YnB9LSogY2xhc3NlcyBnZW5lcmF0ZWQgbm9yIGBjb2xzYCBzcGVjaWZpZWQuCiAgICAgICAgICBjb2w6ICFoYXNDb2xDbGFzc2VzIHx8ICFwcm9wcy5jb2xzCiAgICAgICAgfSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc0xpc3QkcHVzaCwgImNvbC0iLmNvbmNhdChwcm9wcy5jb2xzKSwgcHJvcHMuY29scyksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NMaXN0JHB1c2gsICJvZmZzZXQtIi5jb25jYXQocHJvcHMub2Zmc2V0KSwgcHJvcHMub2Zmc2V0KSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc0xpc3QkcHVzaCwgIm9yZGVyLSIuY29uY2F0KHByb3BzLm9yZGVyKSwgcHJvcHMub3JkZXIpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTGlzdCRwdXNoLCAiYWxpZ24tc2VsZi0iLmNvbmNhdChwcm9wcy5hbGlnblNlbGYpLCBwcm9wcy5hbGlnblNlbGYpLCBfY2xhc3NMaXN0JHB1c2gpKTsKICAgICAgICBjYWNoZS5zZXQoY2FjaGVLZXksIGNsYXNzTGlzdCk7CiAgICAgIH0pKCk7CiAgICB9CgogICAgcmV0dXJuIGgocHJvcHMudGFnLCBtZXJnZURhdGEoZGF0YSwgewogICAgICAiY2xhc3MiOiBjbGFzc0xpc3QKICAgIH0pLCBjaGlsZHJlbik7CiAgfQp9KTs="},{"version":3,"mappings":"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","names":["Vue","mergeData","upperFirst","breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","offsetProps","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","cols","alignSelf","validator","includes","str","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set"],"sourceRoot":"","sources":["../../../src/components/VGrid/VCol.ts"],"sourcesContent":["import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n"]}]}
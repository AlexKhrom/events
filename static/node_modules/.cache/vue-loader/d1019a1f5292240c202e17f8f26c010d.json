{"remainingRequest":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/go/src/events/static/src/components/Login.vue?vue&type=style&index=0&id=1376494d&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/go/src/events/static/src/components/Login.vue","mtime":1658567967315},{"path":"/Users/mac/go/src/events/static/node_modules/css-loader/dist/cjs.js","mtime":1656160197442},{"path":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1656160198444},{"path":"/Users/mac/go/src/events/static/node_modules/postcss-loader/src/index.js","mtime":1656160197665},{"path":"/Users/mac/go/src/events/static/node_modules/cache-loader/dist/cjs.js","mtime":1656160197065},{"path":"/Users/mac/go/src/events/static/node_modules/vue-loader/lib/index.js","mtime":1656160198005}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtdGV4dC1maWVsZCBpbnB1dCB7CiAgZm9udC1zaXplOiAzMHB4Owp9Cgo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiRA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-form v-if=\"page==='login'\"\n            class=\"form\"\n            :style=\"'margin-top:'+marginTop()\"\n            ref=\"form\"\n            v-model=\"valid\"\n            lazy-validation\n    >\n\n      <v-text-field\n          size=\"30px\"\n          v-model=\"email\"\n          :counter=\"6\"\n          :rules=\"emailRules\"\n          label=\"email\"\n          required\n          solo\n      ></v-text-field>\n\n      <v-text-field\n          v-model=\"password\"\n          :rules=\"passwordRules\"\n          label=\"Password\"\n          :append-icon=\"show ? 'mdi-eye' : 'mdi-eye-off'\"\n          :type=\"show ? 'text' : 'password'\"\n          @click:append=\"show = !show\"\n          required\n          solo\n      ></v-text-field>\n\n\n      <v-btn\n          style=\"height: 40px;width: 100px\"\n          :disabled=\"!valid\"\n          color=\"primary\"\n          class=\"my-2\"\n          @click=\"validate\"\n      >\n        Login\n      </v-btn>\n\n      <v-btn\n          style=\"height: 40px;margin-left: 10px\"\n          class=\"my-2\"\n          @click=\"page='signUp';email='';login='';password=''\"\n      >\n        Sign up\n      </v-btn>\n\n    </v-form>\n\n    <v-form v-if=\"page==='signUp'\"\n            class=\"form\"\n            :style=\"'margin-top:'+marginTop()\"\n            ref=\"form\"\n            v-model=\"valid\"\n            lazy-validation\n    >\n      <v-text-field\n          size=\"30px\"\n          v-model=\"email\"\n          :rules=\"emailRules\"\n          label=\"E-mail\"\n          required\n          solo\n      ></v-text-field>\n\n      <v-text-field\n          size=\"30px\"\n          v-model=\"login\"\n          :counter=\"6\"\n          :rules=\"loginRules\"\n          label=\"Login\"\n          required\n          solo\n      ></v-text-field>\n\n      <v-text-field\n          v-model=\"password\"\n          :rules=\"passwordRules\"\n          label=\"Password\"\n          :append-icon=\"show ? 'mdi-eye' : 'mdi-eye-off'\"\n          :type=\"show ? 'text' : 'password'\"\n          @click:append=\"show = !show\"\n          solo\n      ></v-text-field>\n\n\n      <v-btn\n          style=\"height: 40px;\"\n          class=\"my-2\"\n          color=\"primary\"\n          @click=\"signUp\"\n          :disabled=\"!valid\"\n      >\n        Sign up\n      </v-btn>\n\n    </v-form>\n\n    <v-form v-if=\"page==='code'\"\n            class=\"form\"\n            :style=\"'margin-top:'+marginTop()\"\n            ref=\"form\"\n            v-model=\"valid\"\n            lazy-validation\n    >\n      <h2 style=\"margin-bottom: 20px\">Check your email for code</h2>\n      <v-row style=\"margin-bottom: 0\">\n        <v-btn\n            @click=\"page='signUp'\"\n            color=\"grey\"\n            plain\n        >\n          change email\n        </v-btn>\n      </v-row>\n      <v-text-field\n          style=\"width: 150px\"\n          v-model=\"code\"\n          :rules=\"codeRules\"\n          v-mask=\"'####'\"\n          label=\"X-X-X-X\"\n          @input=\"checkCode\"\n          solo\n      ></v-text-field>\n      <v-btn\n          style=\"height: 40px;\"\n          color=\"primary\"\n          @click=\"signUp\"\n      >\n        reset code\n      </v-btn>\n    </v-form>\n\n    <v-form v-if=\"page==='signUpIsOk'\">\n      <div class=\"text-h2\" style=\"color: limegreen\">sign up is successfull</div>\n    </v-form>\n    <!--    <v-btn-->\n    <!--        style=\"height: 40px;\"-->\n    <!--        color=\"primary\"-->\n    <!--        @click=\"signUp\"-->\n    <!--    >   send email-->\n    <!--    </v-btn>-->\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    page: 'signUp',\n    valid: true,\n    show: false,\n    login: '',\n    email: '',\n    code: '',\n    loginRules: [\n      v => !!v || 'Login is required',\n      v => (v && v.length <= 6) || 'Login must be less than 4 characters',\n    ],\n    password: '',\n    passwordRules: [\n      v => !!v || 'Password is required',\n      v => (v && v.length <= 10) || 'Password must be less than 10 characters',\n    ],\n    codeRules: [\n      v => !!v || 'code is required',\n      v => (v && v.length === 4) || 'code must be 4 characters',\n    ],\n    emailRules: [\n      v => !!v || 'E-mail is required',\n      v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\n    ],\n\n  }),\n\n  methods: {\n    validate() {\n      this.$refs.form.validate()\n      this.loginReq({email: this.email, password: this.password})\n    },\n    reset() {\n      this.$refs.form.reset()\n    },\n    resetValidation() {\n      this.$refs.form.resetValidation()\n    },\n    marginTop() {\n      const devices = new RegExp('Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini', \"i\");\n      if (devices.test(navigator.userAgent)) {\n        return '200px'\n      } else {\n        return '40px'\n      }\n    },\n    signUp() {\n      this.$refs.form.validate()\n      this.signUpReq({email: this.email, login: this.login, password: this.password})\n      this.page = 'code'\n\n    },\n\n    checkCode() {\n      if (this.code.length === 4) {\n        this.checkCodeReq({token: this.getCookie('codeId'), code: this.code})\n        console.log('code = 4')\n        this.page = 'signUpIsOk'\n        setTimeout(this.changePage, 3000)\n      }\n    },\n    changePage() {\n      this.$emit('login', {\n        page: 'add'\n      })\n    },\n    async loginReq(user) {\n      console.log('make request :', user)\n      let response = await fetch('/api/login', {\n        method: 'POST',\n        body: JSON.stringify(user)\n      });\n\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        console.log(\"response = \", response)\n        console.log(\"okkkk\")\n      } else {\n        console.log(\"not ok\")\n      }\n    },\n    async signUpReq(user) {\n      console.log('make request :', user)\n      let response = await fetch('/api/signUp', {\n        method: 'POST',\n        body: JSON.stringify(user)\n      });\n\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        console.log(\"response = \", response)\n        console.log(\"okkkk\")\n      } else {\n        console.log(\"not ok\")\n      }\n    },\n\n    async checkCodeReq(codes) {\n      console.log('make request :', codes)\n      let response = await fetch('/api/checkCode', {\n        method: 'POST',\n        body: JSON.stringify(codes)\n      });\n\n      if (response.ok) { // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        console.log(\"response = \", response)\n        console.log(\"okkkk\")\n      } else {\n        console.log(\"not ok\")\n      }\n    },\n\n    getCookie(name) {\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${name}=`);\n      if (parts.length === 2) return parts.pop().split(';').shift();\n    }\n  },\n}\n</script>\n\n<style scoped>\n.v-text-field input {\n  font-size: 30px;\n}\n\n</style>"]}]}